buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        jcenter()
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public'
        }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.4")
    }
}


def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}


apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'de.fuerstenau.buildconfig'

version "${getGitHash()}"
group project.modGroup

buildConfig {
    buildConfigField "String", "GitHash", "${getGitHash()}"
}

sourceSets.main.java.srcDirs += "build/gen/buildconfig/src/main"


sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    coreMod = '$MIXINS.MixinLoader'
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}

dependencies {
    compile group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"
    compile group: 'club.minnced', name: 'java-discord-rpc', version: '2.0.1'
    compile 'com.github.cabaletta:baritone:1.2.14'
    compile 'cabaletta:baritone-api:1.2'
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {

        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}



task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
        include(dependency('org.spongepowered:mixin'))
        include(dependency('club.minnced:java-discord-rpc:2.0.1'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.refmap.json'
    
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': '$MIXINS.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'access_transformers.cfg',
                'Githash': getGitHash()
        )
    }
}

build.dependsOn(shadowJar)
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

